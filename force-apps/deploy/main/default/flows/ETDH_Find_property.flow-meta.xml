<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>63.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>ASS020b</name>
        <label>ASS020b Save properties</label>
        <locationX>50</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>Properties</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GET020a</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>ASS030b</name>
        <label>ASS030b Save properties</label>
        <locationX>314</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>Properties</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GET030a</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>ASS040b</name>
        <label>ASS040b Save properties</label>
        <locationX>578</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>Properties</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GET040a</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <name>IF010</name>
        <label>IF010 What are we looking for?</label>
        <locationX>314</locationX>
        <locationY>134</locationY>
        <defaultConnector>
            <targetReference>GET040a</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Other</defaultConnectorLabel>
        <rules>
            <name>IF010_Address</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Address</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GET020a</targetReference>
            </connector>
            <label>Address</label>
        </rules>
        <rules>
            <name>IF010_ZipCode</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ZipCode</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GET030a</targetReference>
            </connector>
            <label>Zip Code</label>
        </rules>
    </decisions>
    <description>Finds a property based on Address or Zip Code. The properties can also be searched by other properties but the whole list will be returned and the agent then can filter the list.</description>
    <environments>Default</environments>
    <interviewLabel>ETDH: Find property {!$Flow.CurrentDateTime}</interviewLabel>
    <label>ETDH: Find property</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>GET020a</name>
        <label>GET020a Find By Address</label>
        <locationX>50</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ASS020b</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Address__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Address</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Property__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GET030a</name>
        <label>GET030a Find By Zip Code</label>
        <locationX>314</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ASS030b</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Zip__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ZipCode</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Property__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GET040a</name>
        <label>GET040a Find all properties</label>
        <locationX>578</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ASS040b</targetReference>
        </connector>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Property__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>IF010</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <variables>
        <description>Property address, for example &quot;123 Main Street&quot;</description>
        <name>Address</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Error message, if any</description>
        <name>Message</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>List of properties found</description>
        <name>Properties</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <objectType>Property__c</objectType>
    </variables>
    <variables>
        <description>Property Zip Code, for example 024123</description>
        <name>ZipCode</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
